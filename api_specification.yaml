openapi: 3.0.3
info:
  title: API do Exemplo da Aula de Programação III
  description: Definição exemplificativa de uma API em OpenAPI 3 para o exercício prático das aulas da UC de Programação III do curso de Multimédia do ISMT.
  termsOfService: http://swagger.io/terms/
  contact:
    email: ismt@ismt.pt
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: http://localhost:5000/api/v1
    description: Servidor local
security:
  - bearerAuth: []
tags:
  - name: students
    description: Dados referentes aos estudantes do curso
  - name: teachers
    description: Dados referentes aos professores das disciplinas
  - name: subjects
    description: Dados referentes às disciplinas do curso
  - name: auth
    description: Dados de autenticação
paths:
  /students:
    get:
      tags:
        - students
      summary: Retorna todos os estudantes
      operationId: getAllStudents
      responses:
        "200":
          description: Executado com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Student"
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  
  /student:
    post:
      tags:
        - students
      summary: Cria um novo estudante
      operationId: createStudent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Student"
      responses:
        "201":
          description: estudante criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "400":
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500

  /student/{id}:
    get:
      tags:
        - students
      summary: Retorna um estudante pelo ID
      operationId: getStudentById
      parameters:
        - in: path
          name: id
          required: true
          description: ID do estudante a ser retornado
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "200":
          description: estudante encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "404":
          description: estudante não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    put:
      tags:
        - students
      summary: Atualiza um estudante pelo ID
      operationId: updateStudent
      parameters:
        - in: path
          name: id
          required: true
          description: ID do estudante a ser atualizado
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Student"
      responses:
        "200":
          description: estudante atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "404":
          description: estudante não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    delete:
      tags:
        - students
      summary: Remove um estudante pelo ID
      operationId: deleteStudent
      parameters:
        - in: path
          name: id
          required: true
          description: ID do estudante a ser removido
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "204":
          description: estudante removido com sucesso
        "404":
          description: estudante não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500

  /student/{id}/subjects:
    get:
      tags:
        - students
      summary: Retorna as disciplinas em que o estudante está inscrito
      operationId: getSubjectsEnrolledByStudent
      parameters:
        - in: path
          name: id
          required: true
          description: ID do estudante
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Lista de disciplinas do estudante
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subject'
        "404":
          description: Estudante não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /student/{id}/addsubject:
    post:
      tags:
        - students
      summary: Adiciona uma disciplina a um estudante
      operationId: addSubjectToStudent
      parameters:
        - in: path
          name: id
          required: true
          description: ID do estudante
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Lista de disciplinas do estudante
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subject'
        "404":
          description: Estudante não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /student/{name}:
    get:
      tags:
        - students
      summary: Retorna um estudante pelo nome
      operationId: getStudentByName
      parameters:
        - in: path
          name: name
          required: true
          description: Nome do estudante a ser retornado
          schema:
            type: string
      responses:
        "200":
          description: estudante encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "404":
          description: estudante não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500

  /teachers:
    get:
      tags:
        - teachers
      summary: Retorna todos os professores
      operationId: getAllTeachers
      responses:
        "200":
          description: Lista de professores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Teacher"
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
  
  /teacher:
    post:
      tags:
        - teachers
      summary: Cria um novo professor
      operationId: createTeacher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Teacher"
      responses:
        "201":
          description: Professor criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Teacher"
        "400":
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500

  /teacher/{id}:
    get:
      tags:
        - teachers
      summary: Retorna um professor pelo ID
      operationId: getTeacherById
      parameters:
        - in: path
          name: id
          required: true
          description: ID do professor a ser retornado
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "200":
          description: Professor encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Teacher"
        "404":
          description: Professor não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    put:
      tags:
        - teachers
      summary: Atualiza um professor pelo ID
      operationId: updateTeacher
      parameters:
        - in: path
          name: id
          required: true
          description: ID do professor a ser atualizado
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Teacher"
      responses:
        "200":
          description: Professor atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Teacher"
        "404":
          description: Professor não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    delete:
      tags:
        - teachers
      summary: Remove um professor pelo ID
      operationId: deleteTeacher
      parameters:
        - in: path
          name: id
          required: true
          description: ID do professor a ser removido
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "204":
          description: Professor removido com sucesso
        "404":
          description: Professor não encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500

  /subjects:
    get:
      tags:
        - subjects
      summary: Retorna todas as disciplinas
      operationId: getAllSubjects
      responses:
        "200":
          description: Lista de disciplinas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Subject"
        "401":
          description: Não autorizado
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500

  /subject:
    post:
      tags:
        - subjects
      summary: Cria uma nova disciplina
      operationId: createSubject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subject"
      responses:
        "201":
          description: Disciplina criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subject"
        "400":
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500

  /subject/{id}:
    get:
      tags:
        - subjects
      summary: Retorna uma disciplina pelo ID
      operationId: getSubjectById
      parameters:
        - in: path
          name: id
          required: true
          description: ID da disciplina a ser retornada
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "200":
          description: Disciplina encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subject"
        "404":
          description: Disciplina não encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    put:
      tags:
        - subjects
      summary: Atualiza uma disciplina pelo ID
      operationId: updateSubject
      parameters:
        - in: path
          name: id
          required: true
          description: ID da disciplina a ser atualizada
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subject"
      responses:
        "200":
          description: Disciplina atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subject"
        "404":
          description: Disciplina não encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500
    delete:
      tags:
        - subjects
      summary: Remove uma disciplina pelo ID
      operationId: deleteSubject
      parameters:
        - in: path
          name: id
          required: true
          description: ID da disciplina a ser removida
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        "204":
          description: Disciplina removida com sucesso
        "404":
          description: Disciplina não encontrada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500

  /register:
    post:
      tags:
        - auth
      summary: Registo de um novo utilizador
      security: []  # Desativa autenticação para este endpoint
      requestBody:
        description: Dados do utilizador
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  format: string
                email:
                  type: string
                  format: string
                password:
                  type: string
                  format: string
        required: true
      responses:
        '200':
          description: Utilizador registado com sucesso
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: Acesso não autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500

  /login:
    post:
      tags:
        - auth
      summary: Autenticação do utilizador
      security: []  # Desativa autenticação para este endpoint
      requestBody:
        description: Dados de autenticação do utilizador
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: string
                password:
                  type: string
                  format: string
      responses:
        '200':
          description: Autenticação com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: Acesso não autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500

  /refreshToken:
    post:
      tags:
        - auth
      summary: Reinicia o tempo útil do token
      parameters:
        - name: token
          in: header
          description: refresh token
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Renovação do token realizada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  AccessToken:
                    type: string
                    format: string
        '404':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: Acesso não autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500

  /logout:
    delete:
      tags:
        - auth
      summary: Logout do utilizador
      parameters:
        - name: token
          in: header
          description: token de acesso atual
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Logout realizado com sucesso
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '403':
          description: Acesso não autorizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: Erro interno
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                message: Erro interno no servidor
                code: 500

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Student:
      required:
        - id
        - name
        - nif
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Chave primária da entidade estudante
          example: 1
        name:
          type: string
          description: Nome completo do estudante
          example: Carlos Silva
          minLength: 2
        address:
          type: string
          description: Morada do estudante
          example: Rua B
        nif:
          type: integer
          format: int64
          description: NIF do estudante (9 dígitos)
          example: 123456789
          minimum: 000000001
          maximum: 999999999
        subjects:
          type: array
          description: Disciplinas em que o estudante está inscrito
          items:
            $ref: '#/components/schemas/Subject'
    Teacher:
      required:
        - id
        - name
        - nif
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Chave primária do professor
          example: 1
        name:
          type: string
          description: Nome completo do professor
          example: Maria Sousa
        email:
          type: string
          description: Endereço de email do professor
          example: maria@ismt.pt
        nif:
          type: integer
          format: int64
          description: NIF do professor (9 dígitos)
          example: 987654321
          minimum: 000000001
          maximum: 999999999
        subjects:
          type: array
          description: Todas as disciplinas que o professor leciona
          items:
            $ref: '#/components/schemas/Subject'
    Subject:
      required:
        - id
        - name
        - totalHours
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Chave primária da disciplina
          example: 10
        name:
          type: string
          description: Nome da disciplina
          example: Programação III
        totalHours:
          type: number
          format: double
          description: Total de horas letivas da disciplina
          example: 64
        teachers:
          type: array
          description: Todos os professores que lecionam a disciplina
          items:
            $ref: '#/components/schemas/Teacher'
    Auth:
      type: object
      properties:
        AccessToken:
          type: string
          description: Token JWT de acesso
          example: eyJhbGciOiJIUzI1NiIsInR...
        RefreshToken:
          type: string
          description: Token de atualização para renovar o acesso
          example: dGhpcyByZWZyZXNoIHRva2Vu
    Error:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
      example:
        message: Recurso não encontrado
        code: 404